<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WeAir</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://weair.cc/"/>
  <updated>2025-02-17T08:08:55.882Z</updated>
  <id>https://weair.cc/</id>
  
  <author>
    <name>WeAir</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>动态调整LVM分区大小</title>
    <link href="https://weair.cc/resize-lvm-partitions/"/>
    <id>https://weair.cc/resize-lvm-partitions/</id>
    <published>2025-02-17T04:00:00.000Z</published>
    <updated>2025-02-17T08:08:55.882Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查看当前各分区大小"><a href="#查看当前各分区大小" class="headerlink" title="查看当前各分区大小"></a>查看当前各分区大小</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Filesystem                  Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/openeuler-root   69G   56G  9.9G  85% /</span><br><span class="line">devtmpfs                    4.0M     0  4.0M   0% /dev</span><br><span class="line">tmpfs                        12G     0   12G   0% /dev/shm</span><br><span class="line">tmpfs                       4.0M     0  4.0M   0% /sys/fs/cgroup</span><br><span class="line">tmpfs                       4.7G  488M  4.2G  11% /run</span><br><span class="line">tmpfs                        12G  8.0K   12G   1% /tmp</span><br><span class="line">/dev/vda2                   974M  344M  563M  38% /boot</span><br><span class="line">/dev/mapper/openeuler-home   41G   24K   39G   1% /home</span><br></pre></td></tr></table></figure><h3 id="卸载home分区"><a href="#卸载home分区" class="headerlink" title="卸载home分区"></a>卸载home分区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /home</span><br></pre></td></tr></table></figure><h3 id="检查分区"><a href="#检查分区" class="headerlink" title="检查分区"></a>检查分区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e2fsck -f /dev/mapper/openeuler-home</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">e2fsck 1.47.0 (5-Feb-2023)</span><br><span class="line">Pass 1: Checking inodes, blocks, and sizes</span><br><span class="line">Pass 2: Checking directory structure</span><br><span class="line">Pass 3: Checking directory connectivity</span><br><span class="line">Pass 4: Checking reference counts</span><br><span class="line">Pass 5: Checking group summary information</span><br><span class="line">/dev/mapper/openeuler-home: 11/2698080 files (0.0% non-contiguous), 247204/10782720 blocks</span><br></pre></td></tr></table></figure><h3 id="调整home分区大小"><a href="#调整home分区大小" class="headerlink" title="调整home分区大小"></a>调整home分区大小</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resize2fs -p /dev/mapper/openeuler-home 10G</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">resize2fs 1.47.0 (5-Feb-2023)</span><br><span class="line">Resizing the filesystem on /dev/mapper/openeuler-home to 2621440 (4k) blocks.</span><br><span class="line">Begin pass 2 (max = 65536)</span><br><span class="line">Relocating blocks             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">Begin pass 3 (max = 330)</span><br><span class="line">Scanning inode table          XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">The filesystem on /dev/mapper/openeuler-home is now 2621440 (4k) blocks long.</span><br></pre></td></tr></table></figure><h3 id="压缩逻辑卷所占空间大小"><a href="#压缩逻辑卷所占空间大小" class="headerlink" title="压缩逻辑卷所占空间大小"></a>压缩逻辑卷所占空间大小</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvreduce -L 10G /dev/mapper/openeuler-home</span><br></pre></td></tr></table></figure><h3 id="查看卷组信息"><a href="#查看卷组信息" class="headerlink" title="查看卷组信息"></a>查看卷组信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgdisplay</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">--- Volume group ---</span><br><span class="line">VG Name               openeuler</span><br><span class="line">System ID</span><br><span class="line">Format                lvm2</span><br><span class="line">Metadata Areas        1</span><br><span class="line">Metadata Sequence No  5</span><br><span class="line">VG Access             read/write</span><br><span class="line">VG Status             resizable</span><br><span class="line">MAX LV                0</span><br><span class="line">Cur LV                3</span><br><span class="line">Open LV               2</span><br><span class="line">Max PV                0</span><br><span class="line">Cur PV                1</span><br><span class="line">Act PV                1</span><br><span class="line">VG Size               &lt;119.00 GiB</span><br><span class="line">PE Size               4.00 MiB</span><br><span class="line">Total PE              30463</span><br><span class="line">Alloc PE / Size       22493 / 87.86 GiB</span><br><span class="line">Free  PE / Size       7970 / 31.13 GiB</span><br><span class="line">VG UUID               1GU3bo-9ztM-DzPZ-VFnZ-VaTF-Am3S-zoCoTO</span><br></pre></td></tr></table></figure><h3 id="扩展逻辑卷容量"><a href="#扩展逻辑卷容量" class="headerlink" title="扩展逻辑卷容量"></a>扩展逻辑卷容量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvextend -l+100%FREE /dev/mapper/openeuler-root</span><br></pre></td></tr></table></figure><h3 id="调整根分区大小"><a href="#调整根分区大小" class="headerlink" title="调整根分区大小"></a>调整根分区大小</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resize2fs -p /dev/mapper/openeuler-root</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">resize2fs 1.47.0 (5-Feb-2023)</span><br><span class="line">Filesystem at /dev/mapper/openeuler-root is mounted on /; on-line resizing required</span><br><span class="line">old_desc_blocks = 9, new_desc_blocks = 13</span><br><span class="line">The filesystem on /dev/mapper/openeuler-root is now 26511360 (4k) blocks long.</span><br></pre></td></tr></table></figure><h3 id="重新挂载home分区"><a href="#重新挂载home分区" class="headerlink" title="重新挂载home分区"></a>重新挂载home分区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/mapper/openeuler-home /home</span><br></pre></td></tr></table></figure><h3 id="查看调整后各分区大小"><a href="#查看调整后各分区大小" class="headerlink" title="查看调整后各分区大小"></a>查看调整后各分区大小</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Filesystem                  Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/openeuler-root   99G   56G   40G  59% /</span><br><span class="line">devtmpfs                    4.0M     0  4.0M   0% /dev</span><br><span class="line">tmpfs                        12G     0   12G   0% /dev/shm</span><br><span class="line">tmpfs                       4.0M     0  4.0M   0% /sys/fs/cgroup</span><br><span class="line">tmpfs                       4.7G  488M  4.2G  11% /run</span><br><span class="line">tmpfs                        12G  8.0K   12G   1% /tmp</span><br><span class="line">/dev/vda2                   974M  344M  563M  38% /boot</span><br><span class="line">/dev/mapper/openeuler-home  9.6G   28K  9.1G   1% /home</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;查看当前各分区大小&quot;&gt;&lt;a href=&quot;#查看当前各分区大小&quot; class=&quot;headerlink&quot; title=&quot;查看当前各分区大小&quot;&gt;&lt;/a&gt;查看当前各分区大小&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
    
      <category term="LVM" scheme="https://weair.cc/tags/LVM/"/>
    
  </entry>
  
  <entry>
    <title>部署Derp中继服务</title>
    <link href="https://weair.cc/install-derp/"/>
    <id>https://weair.cc/install-derp/</id>
    <published>2024-11-30T04:00:00.000Z</published>
    <updated>2025-01-10T09:08:24.544Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://tailscale.com/kb/1232/derp-servers" target="_blank" rel="noopener">Derp</a>是<a href="https://tailscale.com/" target="_blank" rel="noopener">Tailscale</a>自研的中继协议，用于在NAT打洞失败时帮助节点之间相互通信。</p><h3 id="部署Golang环境"><a href="#部署Golang环境" class="headerlink" title="部署Golang环境"></a>部署Golang环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://go.dev/dl/go1.23.4.linux-amd64.tar.gz -O /tmp/go1.23.4.linux-amd64.tar.gz</span><br><span class="line">tar -zxvf /tmp/go1.23.4.linux-amd64.tar.gz -C /usr/<span class="built_in">local</span></span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/go/bin/&#123;go,gofmt&#125; /usr/<span class="built_in">local</span>/bin</span><br><span class="line">rm -rf /tmp/go1.23.4.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="下载并编译安装Derp"><a href="#下载并编译安装Derp" class="headerlink" title="下载并编译安装Derp"></a>下载并编译安装Derp</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">go install tailscale.com/cmd/derper@main</span><br><span class="line">\mv <span class="variable">$HOME</span>/go/bin/derper /usr/<span class="built_in">local</span>/bin</span><br></pre></td></tr></table></figure><h3 id="创建配置目录并添加相关证书"><a href="#创建配置目录并添加相关证书" class="headerlink" title="创建配置目录并添加相关证书"></a>创建配置目录并添加相关证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/derp</span><br><span class="line">\mv domain.name.&#123;crt,key&#125; /etc/derp</span><br></pre></td></tr></table></figure><h3 id="创建Systemd服务"><a href="#创建Systemd服务" class="headerlink" title="创建Systemd服务"></a>创建Systemd服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/systemd/system/derp.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Tailscale Derper</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=derper -a :12345 -c /etc/derp/derper.key -certdir /etc/derp -certmode manual -hostname domain.name -http-port -1  -stun-port 54321</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=5</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="启动Derp服务"><a href="#启动Derp服务" class="headerlink" title="启动Derp服务"></a>启动Derp服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> --now derp.service</span><br></pre></td></tr></table></figure><h3 id="下载Derp配置文件并按需修改"><a href="#下载Derp配置文件并按需修改" class="headerlink" title="下载Derp配置文件并按需修改"></a>下载Derp配置文件并按需修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/juanfont/headscale/refs/heads/main/derp-example.yaml -O /etc/headscale/derp.yaml</span><br></pre></td></tr></table></figure><h3 id="修改Headscale配置"><a href="#修改Headscale配置" class="headerlink" title="修改Headscale配置"></a>修改Headscale配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">derp:</span><br><span class="line">  # server:</span><br><span class="line">    # enabled: false</span><br><span class="line">    # region_id: 999</span><br><span class="line">    # region_code: &quot;headscale&quot;</span><br><span class="line">    # region_name: &quot;Headscale Embedded DERP&quot;</span><br><span class="line">    # stun_listen_addr: &quot;0.0.0.0:3478&quot;</span><br><span class="line">    # private_key_path: /var/lib/headscale/derp_server_private.key</span><br><span class="line">    # automatically_add_embedded_derp_region: true</span><br><span class="line">    # ipv4: 1.2.3.4</span><br><span class="line">    # ipv6: 2001:db8::1</span><br><span class="line">  # urls:</span><br><span class="line">    # - https://controlplane.tailscale.com/derpmap/default</span><br><span class="line">  # paths: []</span><br><span class="line">  paths:</span><br><span class="line">    - /etc/headscale/derp.yaml</span><br><span class="line">  # auto_update_enabled: true</span><br><span class="line">  # update_frequency: 24h</span><br></pre></td></tr></table></figure><h3 id="重启Headscale服务载入配置"><a href="#重启Headscale服务载入配置" class="headerlink" title="重启Headscale服务载入配置"></a>重启Headscale服务载入配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart headscale.service</span><br></pre></td></tr></table></figure><h3 id="验证Derp服务"><a href="#验证Derp服务" class="headerlink" title="验证Derp服务"></a>验证Derp服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tailscale netcheck</span><br></pre></td></tr></table></figure><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>更多配置信息可查看<a href="https://tailscale.com/kb/1118/custom-derp-servers" target="_blank" rel="noopener">Tailscale</a>文档说明。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://tailscale.com/kb/1232/derp-servers&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Derp&lt;/a&gt;是&lt;a href=&quot;https://tailscale.com/&quot; target=&quot;_bl
      
    
    </summary>
    
    
      <category term="Headscale" scheme="https://weair.cc/tags/Headscale/"/>
    
      <category term="Tailscale" scheme="https://weair.cc/tags/Tailscale/"/>
    
      <category term="Derp" scheme="https://weair.cc/tags/Derp/"/>
    
  </entry>
  
  <entry>
    <title>安装Headscale及Tailscale</title>
    <link href="https://weair.cc/install-headscale-tailscale/"/>
    <id>https://weair.cc/install-headscale-tailscale/</id>
    <published>2024-11-25T04:00:00.000Z</published>
    <updated>2025-03-03T09:23:31.258Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://tailscale.com/" target="_blank" rel="noopener">Tailscale</a>是一款基于<a href="https://www.wireguard.com/" target="_blank" rel="noopener">WireGuard</a>的组网工具，<a href="https://github.com/juanfont/headscale" target="_blank" rel="noopener">Headscale</a>是一款Tailscale控制服务器的开源实现。</p><h3 id="下载Headscale"><a href="#下载Headscale" class="headerlink" title="下载Headscale"></a>下载Headscale</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/juanfont/headscale/releases/download/v0.25.1/headscale_0.25.1_linux_amd64 -O /usr/bin/headscale</span><br><span class="line">chmod +x /usr/bin/headscale</span><br></pre></td></tr></table></figure><h3 id="创建Headscale用户及运行目录"><a href="#创建Headscale用户及运行目录" class="headerlink" title="创建Headscale用户及运行目录"></a>创建Headscale用户及运行目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">groupadd headscale</span><br><span class="line">useradd -M -s `<span class="built_in">which</span> nologin` -g headscale headscale</span><br><span class="line">mkdir -p /etc/headscale /var/lib/headscale</span><br><span class="line">chown -R headscale:headscale /var/lib/headscale</span><br></pre></td></tr></table></figure><h3 id="下载并配置Headscale配置文件"><a href="#下载并配置Headscale配置文件" class="headerlink" title="下载并配置Headscale配置文件"></a>下载并配置Headscale配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/juanfont/headscale/main/config-example.yaml -O /etc/headscale/config.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 修改server_url地址</span><br><span class="line">server_url: https://domain.name</span><br><span class="line">listen_addr: 127.0.0.1:8080</span><br><span class="line">...</span><br><span class="line"># 关闭IPv6地址</span><br><span class="line">prefixes:</span><br><span class="line">  # v6: fd7a:115c:a1e0::/48</span><br><span class="line">  v4: 100.64.0.0/10</span><br><span class="line">...</span><br><span class="line"># 关闭MagicDNS</span><br><span class="line">dns:</span><br><span class="line">  # magic_dns: true</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="配置Nginx反代"><a href="#配置Nginx反代" class="headerlink" title="配置Nginx反代"></a>配置Nginx反代</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">map $http_upgrade $connection_upgrade &#123;</span><br><span class="line">    default      upgrade;</span><br><span class="line">    &apos;&apos;           close;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line"></span><br><span class="line">    listen 443      ssl http2;</span><br><span class="line">    listen [::]:443 ssl http2;</span><br><span class="line"></span><br><span class="line">    server_name domain.name;</span><br><span class="line"></span><br><span class="line">    ssl_certificate path/cert.crt;</span><br><span class="line">    ssl_certificate_key /path/cert.key;</span><br><span class="line">    ssl_protocols TLSv1.2 TLSv1.3;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:8080;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection $connection_upgrade;</span><br><span class="line">        proxy_set_header Host $server_name;</span><br><span class="line">        proxy_redirect http:// https://;</span><br><span class="line">        proxy_buffering off;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        add_header Strict-Transport-Security &quot;max-age=15552000; includeSubDomains&quot; always;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试配置"><a href="#测试配置" class="headerlink" title="测试配置"></a>测试配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">headscale configtest</span><br></pre></td></tr></table></figure><h3 id="创建Systemd服务"><a href="#创建Systemd服务" class="headerlink" title="创建Systemd服务"></a>创建Systemd服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://headscale.net/0.25.1/packaging/headscale.systemd.service -O /etc/systemd/system/headscale.service</span><br></pre></td></tr></table></figure><h3 id="启动Headscale服务"><a href="#启动Headscale服务" class="headerlink" title="启动Headscale服务"></a>启动Headscale服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> --now headscale.service</span><br></pre></td></tr></table></figure><h3 id="下载安装Tailscale"><a href="#下载安装Tailscale" class="headerlink" title="下载安装Tailscale"></a>下载安装Tailscale</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://pkgs.tailscale.com/stable/tailscale_1.80.2_amd64.tgz -O /tmp/tailscale_1.80.2_amd64.tgz</span><br><span class="line">tar -zxvf /tmp/tailscale_1.80.2_amd64.tgz -C /tmp</span><br><span class="line">\mv /tmp/tailscale_1.80.2_amd64/systemd/tailscaled.service /etc/systemd/system/tailscaled.service</span><br><span class="line">\mv /tmp/tailscale_1.80.2_amd64/systemd/tailscaled.defaults /etc/default/tailscaled</span><br><span class="line">\mv /tmp/tailscale_1.80.2_amd64/tailscaled /usr/sbin/tailscaled</span><br><span class="line">\mv /tmp/tailscale_1.80.2_amd64/tailscale /usr/bin/tailscale</span><br><span class="line">rm -rf /tmp/tailscale_1.80.2_amd64*</span><br></pre></td></tr></table></figure><h3 id="启动Tailscale"><a href="#启动Tailscale" class="headerlink" title="启动Tailscale"></a>启动Tailscale</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> --now tailscaled.service</span><br></pre></td></tr></table></figure><h3 id="Headscale添加新用户"><a href="#Headscale添加新用户" class="headerlink" title="Headscale添加新用户"></a>Headscale添加新用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">headscale user create user01</span><br></pre></td></tr></table></figure><h3 id="Headscale查看用户"><a href="#Headscale查看用户" class="headerlink" title="Headscale查看用户"></a>Headscale查看用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">headscale user list</span><br></pre></td></tr></table></figure><h3 id="Tailscale接入Headscale"><a href="#Tailscale接入Headscale" class="headerlink" title="Tailscale接入Headscale"></a>Tailscale接入Headscale</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tailscale客户端</span></span><br><span class="line">tailscale up --login-server=https://domain.name --accept-routes=<span class="literal">true</span> --accept-dns=<span class="literal">false</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Headscale控制端</span></span><br><span class="line">headscale nodes register --user user01 --key mkey:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure><h3 id="Tailscale查看状态"><a href="#Tailscale查看状态" class="headerlink" title="Tailscale查看状态"></a>Tailscale查看状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tailscale status</span><br></pre></td></tr></table></figure><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>更多配置信息可查看<a href="https://headscale.net/setup/requirements/" target="_blank" rel="noopener">Headscale</a>及<a href="https://tailscale.com/kb/1017/install" target="_blank" rel="noopener">Tailscale</a>文档说明。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://tailscale.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Tailscale&lt;/a&gt;是一款基于&lt;a href=&quot;https://www.wireguard.com/&quot; target=&quot;_blank&quot; re
      
    
    </summary>
    
    
      <category term="Headscale" scheme="https://weair.cc/tags/Headscale/"/>
    
      <category term="Tailscale" scheme="https://weair.cc/tags/Tailscale/"/>
    
  </entry>
  
  <entry>
    <title>基于mosdns搭建DOH</title>
    <link href="https://weair.cc/use-mosdns-build-doh/"/>
    <id>https://weair.cc/use-mosdns-build-doh/</id>
    <published>2024-11-01T04:00:00.000Z</published>
    <updated>2024-12-02T09:30:03.551Z</updated>
    
    <content type="html"><![CDATA[<h3 id="下载mosdns"><a href="#下载mosdns" class="headerlink" title="下载mosdns"></a>下载mosdns</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/IrineSistiana/mosdns/releases/download/v5.3.3/mosdns-linux-amd64.zip -O /tmp/mosdns.zip</span><br><span class="line">unzip /tmp/mosdns.zip -d /tmp/mosdns/</span><br><span class="line">\mv /tmp/mosdns/mosdns /usr/<span class="built_in">local</span>/bin/</span><br><span class="line">rm -rf /tmp/mosdns*</span><br></pre></td></tr></table></figure><h3 id="创建及下载相关分流规则"><a href="#创建及下载相关分流规则" class="headerlink" title="创建及下载相关分流规则"></a>创建及下载相关分流规则</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/<span class="built_in">local</span>/etc/mosdns/rules/</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"localhost 127.0.0.1"</span> &gt; /usr/<span class="built_in">local</span>/etc/mosdns/rules/hosts</span><br><span class="line">curl https://raw.githubusercontent.com/pmkol/easymosdns/refs/heads/rules/china_domain_list.txt &gt; /usr/<span class="built_in">local</span>/etc/mosdns/rules/china_domain_list.txt</span><br><span class="line">curl https://raw.githubusercontent.com/pmkol/easymosdns/refs/heads/rules/china_ip_list.txt &gt; /usr/<span class="built_in">local</span>/etc/mosdns/rules/china_ip_list.txt</span><br><span class="line">curl https://raw.githubusercontent.com/pmkol/easymosdns/refs/heads/rules/ad_domain_list.txt &gt; /usr/<span class="built_in">local</span>/etc/mosdns/rules/ad_domain_list.txt</span><br></pre></td></tr></table></figure><h3 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /usr/<span class="built_in">local</span>/etc/mosdns/config.yaml &lt;&lt; EOF</span><br><span class="line"><span class="built_in">log</span>:</span><br><span class="line">  level: error</span><br><span class="line">  file: <span class="string">"./mosdns.log"</span></span><br><span class="line"></span><br><span class="line">plugins:</span><br><span class="line"><span class="comment"># 国内域名列表</span></span><br><span class="line"><span class="comment"># https://raw.githubusercontent.com/pmkol/easymosdns/refs/heads/rules/china_domain_list.txt</span></span><br><span class="line">  - tag: cn_domainList</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">"domain_set"</span></span><br><span class="line">    args:</span><br><span class="line">      files:</span><br><span class="line">        - <span class="string">"./rules/china_domain_list.txt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 国内IP列表</span></span><br><span class="line"><span class="comment"># https://raw.githubusercontent.com/pmkol/easymosdns/refs/heads/rules/china_ip_list.txt</span></span><br><span class="line">  - tag: cn_ipList</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">"ip_set"</span></span><br><span class="line">    args:</span><br><span class="line">      files:</span><br><span class="line">        - <span class="string">"./rules/china_ip_list.txt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 广告域名列表</span></span><br><span class="line"><span class="comment"># https://raw.githubusercontent.com/pmkol/easymosdns/refs/heads/rules/ad_domain_list.txt</span></span><br><span class="line">  - tag: block_domains</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">"domain_set"</span></span><br><span class="line">    args:</span><br><span class="line">      files:</span><br><span class="line">        - <span class="string">"./rules/ad_domain_list.txt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hosts</span></span><br><span class="line">  - tag: custom_hosts</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">"hosts"</span></span><br><span class="line">    args:</span><br><span class="line">      files:</span><br><span class="line">        - <span class="string">"./rules/hosts"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cache</span></span><br><span class="line">  - tag: cache</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">"cache"</span></span><br><span class="line">    args:</span><br><span class="line">      size: 65535</span><br><span class="line">      dump_file: <span class="string">"./cache.dump"</span></span><br><span class="line">      lazy_cache_ttl: 86400</span><br><span class="line">      dump_interval: 600</span><br><span class="line"></span><br><span class="line"><span class="comment"># 国内DNS</span></span><br><span class="line">  - tag: cn_DNS</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">"forward"</span></span><br><span class="line">    args:</span><br><span class="line">      concurrent: 2</span><br><span class="line">      upstreams:</span><br><span class="line">        - tag: ali_doh</span><br><span class="line">          addr: <span class="string">"https://223.5.5.5/dns-query"</span></span><br><span class="line">          enable_pipeline: <span class="literal">true</span></span><br><span class="line">          insecure_skip_verify: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">        - tag: dnspod_doh</span><br><span class="line">          addr: <span class="string">"https://1.12.12.12/dns-query"</span></span><br><span class="line">          enable_pipeline: <span class="literal">true</span></span><br><span class="line">          insecure_skip_verify: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 国外DNS</span></span><br><span class="line">  - tag: global_DNS</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">"forward"</span></span><br><span class="line">    args:</span><br><span class="line">      concurrent: 2</span><br><span class="line">      upstreams:</span><br><span class="line">        - tag: google_doh</span><br><span class="line">          addr: <span class="string">"https://8.8.8.8/dns-query"</span></span><br><span class="line">          <span class="comment">#socks5: "127.0.0.1:7890"</span></span><br><span class="line">          enable_pipeline: <span class="literal">true</span></span><br><span class="line">          insecure_skip_verify: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">        - tag: google_dot</span><br><span class="line">          addr: <span class="string">"tls://8.8.4.4"</span></span><br><span class="line">          <span class="comment">#socks5: "127.0.0.1:7890"</span></span><br><span class="line">          enable_pipeline: <span class="literal">true</span></span><br><span class="line">          insecure_skip_verify: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改TTL</span></span><br><span class="line">  - tag: modify_ttl</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">"sequence"</span></span><br><span class="line">    args:</span><br><span class="line">      - <span class="built_in">exec</span>: ttl 60-300</span><br><span class="line"></span><br><span class="line">  - tag: modify_black_ttl</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">"sequence"</span></span><br><span class="line">    args:</span><br><span class="line">      - <span class="built_in">exec</span>: ttl 600-3600</span><br><span class="line"></span><br><span class="line">  - tag: modify_resp_ttl</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">"sequence"</span></span><br><span class="line">    args:</span><br><span class="line">      - matches: <span class="string">"qname \$block_domains"</span></span><br><span class="line">        <span class="built_in">exec</span>: mark 1</span><br><span class="line">      - matches: <span class="string">"mark 1"</span></span><br><span class="line">        <span class="built_in">exec</span>: jump modify_black_ttl</span><br><span class="line">      - matches: <span class="string">"!mark 1"</span></span><br><span class="line">        <span class="built_in">exec</span>: jump modify_ttl</span><br><span class="line"></span><br><span class="line">  - tag: custom_hosts_resp</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">"sequence"</span></span><br><span class="line">    args:</span><br><span class="line">      - <span class="built_in">exec</span>: jump modify_resp_ttl</span><br><span class="line">      - matches: <span class="string">"has_resp"</span></span><br><span class="line">        <span class="built_in">exec</span>: query_summary hit_custom_hosts</span><br><span class="line">      - matches: <span class="string">"has_resp"</span></span><br><span class="line">        <span class="built_in">exec</span>: accept</span><br><span class="line"></span><br><span class="line">  - tag: hit_cache_resp</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">"sequence"</span></span><br><span class="line">    args:</span><br><span class="line">      - <span class="built_in">exec</span>: jump modify_resp_ttl</span><br><span class="line">      - matches: <span class="string">"has_resp"</span></span><br><span class="line">        <span class="built_in">exec</span>: query_summary hit_cache</span><br><span class="line">      - matches: <span class="string">"has_resp"</span></span><br><span class="line">        <span class="built_in">exec</span>: accept</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拒绝解析</span></span><br><span class="line">  - tag: query_is_reject</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">"sequence"</span></span><br><span class="line">    args:</span><br><span class="line">      - <span class="built_in">exec</span>: black_hole 127.0.0.1 ::1 0.0.0.0</span><br><span class="line">      - <span class="built_in">exec</span>: query_summary hit_block_domains</span><br><span class="line">      - matches: <span class="string">"qtype 65"</span></span><br><span class="line">        <span class="built_in">exec</span>: reject 3</span><br><span class="line">      - matches: <span class="string">"has_resp"</span></span><br><span class="line">        <span class="built_in">exec</span>: accept</span><br><span class="line"></span><br><span class="line"><span class="comment"># 国内解析</span></span><br><span class="line">  - tag: cn_resolve</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">"sequence"</span></span><br><span class="line">    args:</span><br><span class="line">      - <span class="built_in">exec</span>: ecs 211.100.0.0</span><br><span class="line">      - <span class="built_in">exec</span>: \<span class="variable">$cn_DNS</span></span><br><span class="line">      - <span class="built_in">exec</span>: jump modify_resp_ttl</span><br><span class="line">      - <span class="built_in">exec</span>: query_summary hit_cn_DNS</span><br><span class="line"></span><br><span class="line"><span class="comment"># 国外解析</span></span><br><span class="line">  - tag: global_resolve</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">"sequence"</span></span><br><span class="line">    args:</span><br><span class="line">      - <span class="built_in">exec</span>: ecs 211.100.0.0</span><br><span class="line">      - <span class="built_in">exec</span>: \<span class="variable">$global_DNS</span></span><br><span class="line">      - <span class="built_in">exec</span>: jump modify_resp_ttl</span><br><span class="line">      - <span class="built_in">exec</span>: query_summary hit_global_DNS</span><br><span class="line">      - matches: <span class="string">"has_resp"</span></span><br><span class="line">        <span class="built_in">exec</span>: accept</span><br><span class="line"></span><br><span class="line">  - tag: cn_resolve_sequence</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">"sequence"</span></span><br><span class="line">    args:</span><br><span class="line">      - <span class="built_in">exec</span>: \<span class="variable">$cn_resolve</span></span><br><span class="line">      - matches: <span class="string">"resp_ip \$cn_ipList"</span></span><br><span class="line">        <span class="built_in">exec</span>: accept</span><br><span class="line"></span><br><span class="line">  - tag: global_resolve_sequence</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">"sequence"</span></span><br><span class="line">    args:</span><br><span class="line">      - <span class="built_in">exec</span>: \<span class="variable">$global_resolve</span></span><br><span class="line">      - matches: <span class="string">"has_resp"</span></span><br><span class="line">        <span class="built_in">exec</span>: accept</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析流程</span></span><br><span class="line">  - tag: resolve_process</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">"sequence"</span></span><br><span class="line">    args:</span><br><span class="line">      - <span class="built_in">exec</span>: prefer_ipv4</span><br><span class="line"></span><br><span class="line">      - <span class="built_in">exec</span>: \<span class="variable">$custom_hosts</span></span><br><span class="line">      - matches: <span class="string">"has_resp"</span></span><br><span class="line">        <span class="built_in">exec</span>: goto custom_hosts_resp</span><br><span class="line"></span><br><span class="line">      - <span class="built_in">exec</span>: \<span class="variable">$cache</span></span><br><span class="line">      - matches: <span class="string">"has_resp"</span></span><br><span class="line">        <span class="built_in">exec</span>: goto hit_cache_resp</span><br><span class="line"></span><br><span class="line">      - matches: <span class="string">"qname \$block_domains"</span></span><br><span class="line">        <span class="built_in">exec</span>: jump query_is_reject</span><br><span class="line"></span><br><span class="line">      - matches: <span class="string">"qname \$cn_domainList"</span></span><br><span class="line">        <span class="built_in">exec</span>: jump cn_resolve_sequence</span><br><span class="line"></span><br><span class="line">      - <span class="built_in">exec</span>: goto global_resolve_sequence</span><br><span class="line"></span><br><span class="line"><span class="comment"># DNS服务</span></span><br><span class="line"><span class="comment">#  - tag: udp_server</span></span><br><span class="line"><span class="comment">#    type: "udp_server"</span></span><br><span class="line"><span class="comment">#    args:</span></span><br><span class="line"><span class="comment">#      entry: resolve_process     # 可执行插件的 tag。</span></span><br><span class="line"><span class="comment">#      listen: "127.0.0.1:53"     # 监听地址。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  - tag: tcp_server</span></span><br><span class="line"><span class="comment">#    type: "tcp_server"</span></span><br><span class="line"><span class="comment">#    args:</span></span><br><span class="line"><span class="comment">#      entry: resolve_process     # 可执行插件的 tag。</span></span><br><span class="line"><span class="comment">#      listen: "127.0.0.1:53"     # 监听地址。</span></span><br><span class="line"><span class="comment">#      cert: ""                   # 配置 cert 和 key 后会启用 TLS (DoT),别忘记修改为853端口。</span></span><br><span class="line"><span class="comment">#      key:  ""</span></span><br><span class="line"><span class="comment">#      idle_timeout: 10           # 空连接超时。单位秒。默认 10。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  - tag: quic_server</span></span><br><span class="line"><span class="comment">#    type: "quic_server"</span></span><br><span class="line"><span class="comment">#    args:</span></span><br><span class="line"><span class="comment">#      entry: resolve_process     # 可执行插件的 tag。</span></span><br><span class="line"><span class="comment">#      listen: "0.0.0.0:443"      # 监听地址。     </span></span><br><span class="line"><span class="comment">#      cert: ""</span></span><br><span class="line"><span class="comment">#      key:  ""</span></span><br><span class="line"><span class="comment">#      idle_timeout: 30           # 空连接超时。单位秒。默认 30。 </span></span><br><span class="line"></span><br><span class="line">  - tag: server_http</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">"http_server"</span></span><br><span class="line">    args:</span><br><span class="line">      entries:                    <span class="comment"># []extry</span></span><br><span class="line">        - path: /dns-query        <span class="comment"># 本路径执行</span></span><br><span class="line">          <span class="built_in">exec</span>: resolve_process   <span class="comment"># 可执行插件的 tag。  </span></span><br><span class="line">      src_ip_header: <span class="string">"X-Real-IP"</span>  <span class="comment"># 从 HTTP 头获取用户 IP。</span></span><br><span class="line">      listen: 127.0.0.1:8443      <span class="comment"># 监听地址。</span></span><br><span class="line">      cert: <span class="string">""</span>                    <span class="comment"># 留空 cert 和 key 后会禁用 TLS。</span></span><br><span class="line">      key: <span class="string">""</span></span><br><span class="line">      idle_timeout: 10            <span class="comment"># 空连接超时。单位秒。默认 30。</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="测试运行mosdns"><a href="#测试运行mosdns" class="headerlink" title="测试运行mosdns"></a>测试运行mosdns</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/bin/mosdns -c /usr/<span class="built_in">local</span>/etc/mosdns/config.yaml -d /usr/<span class="built_in">local</span>/etc/mosdns</span><br></pre></td></tr></table></figure><h3 id="创建Systemd服务"><a href="#创建Systemd服务" class="headerlink" title="创建Systemd服务"></a>创建Systemd服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/systemd/system/mosdns.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=mosdns daemon, DNS server.</span><br><span class="line">After=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=/usr/<span class="built_in">local</span>/etc/mosdns</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/mosdns start -c /usr/<span class="built_in">local</span>/etc/mosdns/config.yaml -d /usr/<span class="built_in">local</span>/etc/mosdns</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=3s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.targe</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="启动mosdns服务"><a href="#启动mosdns服务" class="headerlink" title="启动mosdns服务"></a>启动mosdns服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> --now mosdns.service</span><br></pre></td></tr></table></figure><h3 id="分流规则升级脚本"><a href="#分流规则升级脚本" class="headerlink" title="分流规则升级脚本"></a>分流规则升级脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /usr/<span class="built_in">local</span>/etc/mosdns/rules/update_rules.sh &lt;&lt; EOF</span><br><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">mosdns_working_dir=<span class="string">"/usr/local/etc/mosdns"</span></span><br><span class="line">mkdir -p /tmp/mosdns</span><br><span class="line">curl https://raw.githubusercontent.com/pmkol/easymosdns/refs/heads/rules/china_domain_list.txt &gt; /tmp/mosdns/china_domain_list.txt</span><br><span class="line">curl https://raw.githubusercontent.com/pmkol/easymosdns/refs/heads/rules/china_ip_list.txt &gt; /tmp/mosdns/china_ip_list.txt</span><br><span class="line">curl https://raw.githubusercontent.com/pmkol/easymosdns/refs/heads/rules/ad_domain_list.txt &gt; /tmp/mosdns/ad_domain_list.txt</span><br><span class="line">\cp -rf /tmp/mosdns/*.txt \<span class="variable">$&#123;mosdns_working_dir&#125;</span>/rules</span><br><span class="line">rm -rf /tmp/mosdns/*</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Update successful!"</span></span><br><span class="line">mosdns service restart</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="设置分流规则每天自动升级"><a href="#设置分流规则每天自动升级" class="headerlink" title="设置分流规则每天自动升级"></a>设置分流规则每天自动升级</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br><span class="line"></span><br><span class="line">0 12 * * * bash /usr/<span class="built_in">local</span>/etc/mosdns/rules/update_rules.sh &amp;&gt; /dev/null</span><br></pre></td></tr></table></figure><h3 id="Nginx反代配置"><a href="#Nginx反代配置" class="headerlink" title="Nginx反代配置"></a>Nginx反代配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">location /dns-query &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8443/dns-query;</span><br><span class="line">    proxy_set_header Host $host;</span><br><span class="line">    proxy_set_header X-Real-IP $proxy_protocol_addr;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_protocol_addr;</span><br><span class="line">    proxy_set_header REMOTE-HOST $proxy_protocol_addr;</span><br><span class="line"></span><br><span class="line">    access_log  /path/dns-query.log;</span><br><span class="line">    &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;下载mosdns&quot;&gt;&lt;a href=&quot;#下载mosdns&quot; class=&quot;headerlink&quot; title=&quot;下载mosdns&quot;&gt;&lt;/a&gt;下载mosdns&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
    
      <category term="mosdns" scheme="https://weair.cc/tags/mosdns/"/>
    
      <category term="DOH" scheme="https://weair.cc/tags/DOH/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu禁用systemd-resolved服务</title>
    <link href="https://weair.cc/ubuntu-disable-systemd-resolved/"/>
    <id>https://weair.cc/ubuntu-disable-systemd-resolved/</id>
    <published>2024-10-25T04:00:00.000Z</published>
    <updated>2024-10-30T03:49:45.905Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu会默认开启systemd-resolved服务占用53端口，某些情况下可能会导致端口冲突，所以需要关闭该服务。</p><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'s/#DNSStubListener=yes/DNSStubListener=no/'</span> /etc/systemd/resolved.conf</span><br></pre></td></tr></table></figure><h3 id="创建软链接"><a href="#创建软链接" class="headerlink" title="创建软链接"></a>创建软链接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf</span><br></pre></td></tr></table></figure><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart systemd-resolved.service</span><br></pre></td></tr></table></figure><h3 id="查看53端口是否使用"><a href="#查看53端口是否使用" class="headerlink" title="查看53端口是否使用"></a>查看53端口是否使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i :53</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Ubuntu会默认开启systemd-resolved服务占用53端口，某些情况下可能会导致端口冲突，所以需要关闭该服务。&lt;/p&gt;
&lt;h3 id=&quot;修改配置文件&quot;&gt;&lt;a href=&quot;#修改配置文件&quot; class=&quot;headerlink&quot; title=&quot;修改配置文件&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="Ubuntu" scheme="https://weair.cc/tags/Ubuntu/"/>
    
      <category term="systemd-resolved" scheme="https://weair.cc/tags/systemd-resolved/"/>
    
  </entry>
  
  <entry>
    <title>再见，搜狗输入法</title>
    <link href="https://weair.cc/byebye-sogou/"/>
    <id>https://weair.cc/byebye-sogou/</id>
    <published>2024-10-23T04:00:00.000Z</published>
    <updated>2024-10-28T00:21:58.226Z</updated>
    
    <content type="html"><![CDATA[<h3 id="小动作不断的搜狗输入法"><a href="#小动作不断的搜狗输入法" class="headerlink" title="小动作不断的搜狗输入法"></a>小动作不断的搜狗输入法</h3><p>辣鸡搜狗输入法各种小动作不断，抛去各种弹窗广告不说，还偷偷摸摸的给我塞了各种乱七八糟的程序，比如什么PDF阅读功能、汪仔AI等等等等，最近发现右键菜单又多出来一个彻底粉碎文件，果然还是搜狗输入法搞的鬼。一个输入法居然能搞出来这么多幺蛾子，怒卸之。</p><h3 id="开源替换"><a href="#开源替换" class="headerlink" title="开源替换"></a>开源替换</h3><p>一番搜索之后，找到了一个开源输入法，基于<a href="https://rime.im/" target="_blank" rel="noopener">Rime</a>的<a href="https://github.com/rime/weasel" target="_blank" rel="noopener">小狼毫输入法</a>，词库目前用的是<a href="https://github.com/gaboolic/rime-frost" target="_blank" rel="noopener">白霜词库</a>，同时也推荐<a href="https://github.com/iDvel/rime-ice" target="_blank" rel="noopener">雾凇拼音</a>，都可以做到开箱即用，我稍微重新配置了一下，目前刚开始用，感觉还可以，只有打字输入一个纯粹的功能。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;小动作不断的搜狗输入法&quot;&gt;&lt;a href=&quot;#小动作不断的搜狗输入法&quot; class=&quot;headerlink&quot; title=&quot;小动作不断的搜狗输入法&quot;&gt;&lt;/a&gt;小动作不断的搜狗输入法&lt;/h3&gt;&lt;p&gt;辣鸡搜狗输入法各种小动作不断，抛去各种弹窗广告不说，还偷偷摸摸的给我
      
    
    </summary>
    
    
      <category term="RIME" scheme="https://weair.cc/tags/RIME/"/>
    
      <category term="Sogou Pinyin" scheme="https://weair.cc/tags/Sogou-Pinyin/"/>
    
  </entry>
  
  <entry>
    <title>升级PostgreSQL</title>
    <link href="https://weair.cc/upgrade-postgresql/"/>
    <id>https://weair.cc/upgrade-postgresql/</id>
    <published>2024-10-07T04:00:00.000Z</published>
    <updated>2024-10-08T04:33:31.759Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.postgresql.org/" target="_blank" rel="noopener">PostgreSQL</a>是一个开源的对象-关系数据库管理系统。</p><h3 id="检查正在运行的PostgreSQL版本"><a href="#检查正在运行的PostgreSQL版本" class="headerlink" title="检查正在运行的PostgreSQL版本"></a>检查正在运行的PostgreSQL版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pg_lsclusters</span><br></pre></td></tr></table></figure><h3 id="停止新版本的PostgreSQL"><a href="#停止新版本的PostgreSQL" class="headerlink" title="停止新版本的PostgreSQL"></a>停止新版本的PostgreSQL</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pg_dropcluster 17 main --stop</span><br></pre></td></tr></table></figure><h3 id="再次检查正在运行的PostgreSQL版本"><a href="#再次检查正在运行的PostgreSQL版本" class="headerlink" title="再次检查正在运行的PostgreSQL版本"></a>再次检查正在运行的PostgreSQL版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pg_lsclusters</span><br></pre></td></tr></table></figure><h3 id="从旧版本的PostgreSQL升级"><a href="#从旧版本的PostgreSQL升级" class="headerlink" title="从旧版本的PostgreSQL升级"></a>从旧版本的PostgreSQL升级</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pg_upgradecluster 16 main</span><br></pre></td></tr></table></figure><h3 id="停止旧版本的PostgreSQL"><a href="#停止旧版本的PostgreSQL" class="headerlink" title="停止旧版本的PostgreSQL"></a>停止旧版本的PostgreSQL</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pg_dropcluster 16 main</span><br></pre></td></tr></table></figure><h3 id="卸载旧版本的PostgreSQL"><a href="#卸载旧版本的PostgreSQL" class="headerlink" title="卸载旧版本的PostgreSQL"></a>卸载旧版本的PostgreSQL</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt purge postgresql-16 postgresql-client-16</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.postgresql.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;PostgreSQL&lt;/a&gt;是一个开源的对象-关系数据库管理系统。&lt;/p&gt;
&lt;h3 id=&quot;检查正在运行的PostgreSQL版本&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="https://weair.cc/tags/PostgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>使用resolvconf配置DNS服务</title>
    <link href="https://weair.cc/manage-dns-with-resolvconf/"/>
    <id>https://weair.cc/manage-dns-with-resolvconf/</id>
    <published>2024-10-01T04:00:00.000Z</published>
    <updated>2024-10-30T03:34:56.167Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装resolvconf"><a href="#安装resolvconf" class="headerlink" title="安装resolvconf"></a>安装resolvconf</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install resolvconf</span><br></pre></td></tr></table></figure><h3 id="配置DNS服务"><a href="#配置DNS服务" class="headerlink" title="配置DNS服务"></a>配置DNS服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">"nameserver 1.1.1.1\nnameserver 1.0.0.1\n"</span> &gt;&gt; /etc/resolvconf/resolv.conf.d/head</span><br></pre></td></tr></table></figure><h3 id="更新DNS服务配置"><a href="#更新DNS服务配置" class="headerlink" title="更新DNS服务配置"></a>更新DNS服务配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resolvconf -u</span><br></pre></td></tr></table></figure><h3 id="查看当前DNS配置"><a href="#查看当前DNS配置" class="headerlink" title="查看当前DNS配置"></a>查看当前DNS配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resolvectl status</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装resolvconf&quot;&gt;&lt;a href=&quot;#安装resolvconf&quot; class=&quot;headerlink&quot; title=&quot;安装resolvconf&quot;&gt;&lt;/a&gt;安装resolvconf&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;t
      
    
    </summary>
    
    
      <category term="resolvconf" scheme="https://weair.cc/tags/resolvconf/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装Cloudflare WARP</title>
    <link href="https://weair.cc/linux-install-warp/"/>
    <id>https://weair.cc/linux-install-warp/</id>
    <published>2024-08-10T04:00:00.000Z</published>
    <updated>2025-01-10T09:16:07.804Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://1.1.1.1" target="_blank" rel="noopener">WARP</a>是Cloudflare提供的一项基于WireGuard的网络流量安全及加速服务，能够让你通过连接到Cloudflare的边缘节点实现隐私保护及链路优化。</p><h3 id="安装WARP客户端"><a href="#安装WARP客户端" class="headerlink" title="安装WARP客户端"></a>安装WARP客户端</h3><p>Ubuntu系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入cloudflare gpg key</span></span><br><span class="line">curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加软件仓库</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"deb [signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ <span class="variable">$(lsb_release -cs)</span> main"</span> | sudo tee /etc/apt/sources.list.d/cloudflare-client.list</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装</span></span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install cloudflare-warp</span><br></pre></td></tr></table></figure><p>Debian系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入cloudflare gpg key</span></span><br><span class="line">curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加软件仓库</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"deb [signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ <span class="variable">$(lsb_release -cs)</span> main"</span> | sudo tee /etc/apt/sources.list.d/cloudflare-client.list</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装</span></span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install cloudflare-warp</span><br></pre></td></tr></table></figure><p>Red Hat系统及其衍生版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#添加软件仓库</span></span><br><span class="line">curl -fsSl https://pkg.cloudflareclient.com/cloudflare-warp-ascii.repo | sudo tee /etc/yum.repos.d/cloudflare-warp.repo</span><br><span class="line"></span><br><span class="line"><span class="comment">#更新软件仓库</span></span><br><span class="line">sudo yum update</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装</span></span><br><span class="line">sudo yum install cloudflare-warp</span><br></pre></td></tr></table></figure><h3 id="配置WARP"><a href="#配置WARP" class="headerlink" title="配置WARP"></a>配置WARP</h3><p>注册客户端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">warp-cli registration new</span><br></pre></td></tr></table></figure><p>链接Zero Trust</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">warp-cli registration new xxx</span><br></pre></td></tr></table></figure><p>绑定TOKEN</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">warp-cli registration token com.cloudflare.warp://xxx.cloudflareaccess.com/auth?token=xxxxxxxxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure><p>连接WARP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">warp-cli connect</span><br></pre></td></tr></table></figure><p>验证连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> ALL_PROXY=socks5://127.0.0.1:40000</span><br><span class="line">curl https://www.cloudflare.com/cdn-cgi/trace/</span><br></pre></td></tr></table></figure><p>如果返回<code>warp=on</code>或<code>warp=plus</code>则说明连接成功。</p><h3 id="其它相关命令"><a href="#其它相关命令" class="headerlink" title="其它相关命令"></a>其它相关命令</h3><p>查看当前连接状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">warp-cli status</span><br></pre></td></tr></table></figure><p>查看当前配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">warp-cli settings</span><br></pre></td></tr></table></figure><p>更换端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">warp-cli proxy port</span><br></pre></td></tr></table></figure><p>断开连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">warp-cli disconnect</span><br></pre></td></tr></table></figure><p>如果需要查看其它更多帮助可以使用以下命令或查看相关<a href="https://developers.cloudflare.com/warp-client/get-started/linux/" target="_blank" rel="noopener">文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">warp-cli <span class="built_in">help</span></span><br></pre></td></tr></table></figure><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>后续可以通过Cloudflare WARP完成更多其它操作。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://1.1.1.1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WARP&lt;/a&gt;是Cloudflare提供的一项基于WireGuard的网络流量安全及加速服务，能够让你通过连接到Cloudflare的边缘节点实现隐私保护及链
      
    
    </summary>
    
    
      <category term="warp" scheme="https://weair.cc/tags/warp/"/>
    
  </entry>
  
  <entry>
    <title>新年碎碎念</title>
    <link href="https://weair.cc/murmur/"/>
    <id>https://weair.cc/murmur/</id>
    <published>2024-01-21T04:00:00.000Z</published>
    <updated>2024-10-24T00:46:35.485Z</updated>
    
    <content type="html"><![CDATA[<h3 id="开始的开始"><a href="#开始的开始" class="headerlink" title="开始的开始"></a>开始的开始</h3><p>开年暴击，迫于贫穷，一些网站程序什么的搬到了一家便宜的VPS上面。然后，就遇到了VPS所在的服务器炸了，稳定跑了好几年的网站程序还有数据全部灰飞烟灭，再三发工单确认数据救不回来之后，无奈又重新开了一台VPS，还好之前搭建的网站程序都是开源的，扒拉扒拉翻出来还能继续部署，折腾了挺久，就是那些数据彻底寄了。</p><p>还有另外重新开了一台VPS，因为习惯用Firewalld，就顺手装上了，结果装完VPS就失联了，后台重装了好几遍系统，都是装完Firewalld就失联，最后排查出来Firewalld和系统自带的UFW起冲突了，我#$@!%，果断卸载UFW，拜拜了您嘞。</p><h3 id="最后的最后"><a href="#最后的最后" class="headerlink" title="最后的最后"></a>最后的最后</h3><p>数据千万条，备份第一条。这两天终于治好了拖延症，把所有的VPS的数据都备份到了本地。对了，据说这两天那家的VPS又双叒叕失联了，希望不是服务器炸了（笑）。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;开始的开始&quot;&gt;&lt;a href=&quot;#开始的开始&quot; class=&quot;headerlink&quot; title=&quot;开始的开始&quot;&gt;&lt;/a&gt;开始的开始&lt;/h3&gt;&lt;p&gt;开年暴击，迫于贫穷，一些网站程序什么的搬到了一家便宜的VPS上面。然后，就遇到了VPS所在的服务器炸了，稳定跑了好几
      
    
    </summary>
    
    
      <category term="data backup" scheme="https://weair.cc/tags/data-backup/"/>
    
  </entry>
  
  <entry>
    <title>迁移Mastodon到新服务器</title>
    <link href="https://weair.cc/migrating_mastodon/"/>
    <id>https://weair.cc/migrating_mastodon/</id>
    <published>2023-12-01T04:00:00.000Z</published>
    <updated>2023-12-02T08:19:38.390Z</updated>
    
    <content type="html"><![CDATA[<h3 id="在新服务器上按照安装指导重新配置Mastodon相关服务，但不执行mastodon-setup操作。"><a href="#在新服务器上按照安装指导重新配置Mastodon相关服务，但不执行mastodon-setup操作。" class="headerlink" title="在新服务器上按照安装指导重新配置Mastodon相关服务，但不执行mastodon:setup操作。"></a>在新服务器上按照<a href="https://docs.joinmastodon.org/admin/install/" target="_blank" rel="noopener">安装指导</a>重新配置Mastodon相关服务，但不执行<strong>mastodon:setup</strong>操作。</h3><h3 id="在旧服务器上停止Mastodon服务"><a href="#在旧服务器上停止Mastodon服务" class="headerlink" title="在旧服务器上停止Mastodon服务"></a>在旧服务器上停止Mastodon服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop <span class="string">'mastodon-*.service'</span></span><br></pre></td></tr></table></figure><h3 id="导出数据库"><a href="#导出数据库" class="headerlink" title="导出数据库"></a>导出数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 旧服务器上导出数据库</span></span><br><span class="line">pg_dump -Fc mastodon_production -f backup.dump</span><br></pre></td></tr></table></figure><h3 id="导入数据库"><a href="#导入数据库" class="headerlink" title="导入数据库"></a>导入数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新服务器上以mastodon用户创建数据库</span></span><br><span class="line">createdb -T template0 mastodon_production</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新服务器上导入数据库</span></span><br><span class="line">pg_restore -Fc -U mastodon -n public --no-owner --role=mastodon \</span><br><span class="line">  -d mastodon_production backup.dump</span><br></pre></td></tr></table></figure><h3 id="复制-system-文件及-env-production-配置文件"><a href="#复制-system-文件及-env-production-配置文件" class="headerlink" title="复制 system/ 文件及 .env.production 配置文件"></a>复制 <strong>system/</strong> 文件及 <strong>.env.production</strong> 配置文件</h3> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 旧服务器以mastodon用户复制相关文件至新服务器上</span></span><br><span class="line">rsync -avz ~/live/public/system/ mastodon@new.machine:~/live/public/system/</span><br><span class="line">rsync -avz ~/live/.env.production mastodon@new.machine:~/live/.env.production</span><br></pre></td></tr></table></figure><h3 id="在新服务器上重新编译Mastodon"><a href="#在新服务器上重新编译Mastodon" class="headerlink" title="在新服务器上重新编译Mastodon"></a>在新服务器上重新编译Mastodon</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RAILS_ENV=production bundle <span class="built_in">exec</span> rails assets:precompile</span><br></pre></td></tr></table></figure><h3 id="在新服务器上重建时间线"><a href="#在新服务器上重建时间线" class="headerlink" title="在新服务器上重建时间线"></a>在新服务器上重建时间线</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RAILS_ENV=production ./bin/tootctl feeds build</span><br></pre></td></tr></table></figure><h3 id="在新服务器上启动Mastodon服务"><a href="#在新服务器上启动Mastodon服务" class="headerlink" title="在新服务器上启动Mastodon服务"></a>在新服务器上启动Mastodon服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start <span class="string">'mastodon-*.service'</span></span><br></pre></td></tr></table></figure><h3 id="更新域名DNS指向新的服务器"><a href="#更新域名DNS指向新的服务器" class="headerlink" title="更新域名DNS指向新的服务器"></a>更新域名DNS指向新的服务器</h3><p> 其它问题可查询<a href="https://docs.joinmastodon.org/admin/migrating/" target="_blank" rel="noopener">官方文档</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;在新服务器上按照安装指导重新配置Mastodon相关服务，但不执行mastodon-setup操作。&quot;&gt;&lt;a href=&quot;#在新服务器上按照安装指导重新配置Mastodon相关服务，但不执行mastodon-setup操作。&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
    
      <category term="Mastodon" scheme="https://weair.cc/tags/Mastodon/"/>
    
  </entry>
  
  <entry>
    <title>Nginx启用HTTP/3(QUIC)</title>
    <link href="https://weair.cc/nginx-http3/"/>
    <id>https://weair.cc/nginx-http3/</id>
    <published>2023-07-01T04:00:00.000Z</published>
    <updated>2024-10-14T08:28:21.353Z</updated>
    
    <content type="html"><![CDATA[<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>Nginx 1.25.0版本以后已支持HTTP/3，直接下载源码解压编译安装即可，另需防火墙放行UDP的443端口。</p><h3 id="编译安装Boringssl"><a href="#编译安装Boringssl" class="headerlink" title="编译安装Boringssl"></a>编译安装Boringssl</h3><p>谷歌官方建议使用ninja来编译安装Boringssl，因此需先安装<strong>ninja</strong>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/ninja-build/ninja/releases/download/v1.12.1/ninja-linux.zip</span><br><span class="line">unzip ninja-linux.zip</span><br><span class="line">cp ninja /usr/<span class="built_in">local</span>/bin/</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://boringssl.googlesource.com/boringssl</span><br><span class="line"><span class="built_in">cd</span> boringssl/</span><br><span class="line">cmake -GNinja -B build</span><br><span class="line">ninja -C build</span><br></pre></td></tr></table></figure><h3 id="编译安装Nginx-QUIC"><a href="#编译安装Nginx-QUIC" class="headerlink" title="编译安装Nginx QUIC"></a>编译安装Nginx QUIC</h3><p>开启HTTP/3模块需要使用<strong>--with-http_v3_module --with-cc-opt=&quot;-I../boringssl-master/include&quot; --with-ld-opt=&quot;-L../boringssl-master/build/ssl -L../boringssl-master/build/crypto&quot;</strong>参数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">wget https://nginx.org/download/nginx-1.27.2.tar.gz</span><br><span class="line">tar -zxvf 1.27.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> nginx-1.27.2</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/nginx \</span><br><span class="line">--with-cc=c++ \</span><br><span class="line">--with-debug \</span><br><span class="line">--with-http_v3_module \</span><br><span class="line">--with-cc-opt=<span class="string">"-I../boringssl/include -x c"</span> \</span><br><span class="line">--with-ld-opt=<span class="string">"-L../boringssl/build/ssl \</span></span><br><span class="line"><span class="string">-L../boringssl/build/crypto"</span> \</span><br><span class="line"><span class="comment">#下面可以添加自己的编译参数</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>编译完成后查看Nginx信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nginx -V</span><br><span class="line">nginx version: nginx/1.27.2</span><br><span class="line">built by gcc 10.2.1 20210110</span><br><span class="line">built with OpenSSL 1.1.1 (compatible; BoringSSL) (running with BoringSSL)</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix=/usr/<span class="built_in">local</span>/nginx --with-cc=c++ --with-debug --with-http_v3_module --with-cc-opt=<span class="string">'-I../boringssl/include -x c'</span> --with-ld-opt=<span class="string">'-L../boringssl/build/ssl -L../boringssl/build/crypto'</span></span><br></pre></td></tr></table></figure><h3 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 443 ssl;</span><br><span class="line">  listen 443 quic reuseport;</span><br><span class="line">  listen [::]:443 ssl;</span><br><span class="line">  listen [::]:443 quic reuseport;</span><br><span class="line">  http2 on;</span><br><span class="line">  http3 on;</span><br><span class="line">  http3_hq on;</span><br><span class="line">  quic_retry on;</span><br><span class="line">  quic_gso on;</span><br><span class="line">  server_name domain.name;</span><br><span class="line"></span><br><span class="line">  add_header Alt-Svc Alt-Svc <span class="string">'h3=":443"; ma=2592000, h3-29=":443"; ma=2592000, quic=":443"; ma=2592000'</span>;</span><br><span class="line">  </span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完成后重新启动Nginx。</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>可以通过<a href="https://http3check.net" target="_blank" rel="noopener">http3check.net</a>等检测网站或使用浏览器查看协议检测是否启用成功。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h3&gt;&lt;p&gt;Nginx 1.25.0版本以后已支持HTTP/3，直接下载源码解压编译安装即可，另需防火墙放行UDP的443端口。&lt;/p&gt;
&lt;h3 id=
      
    
    </summary>
    
    
      <category term="Nginx" scheme="https://weair.cc/tags/Nginx/"/>
    
      <category term="HTTP/3" scheme="https://weair.cc/tags/HTTP-3/"/>
    
  </entry>
  
  <entry>
    <title>注册了一个域名</title>
    <link href="https://weair.cc/register-a-domain/"/>
    <id>https://weair.cc/register-a-domain/</id>
    <published>2022-10-22T04:00:00.000Z</published>
    <updated>2022-10-22T11:10:24.788Z</updated>
    
    <content type="html"><![CDATA[<h3 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h3><p>又双叒叕注册了一个域名，这次这个是我的姓名拼音，是<strong>名字.姓</strong>这样的，比较坑的是，因为是欧洲那边的国别域名，刚注册完就被锁了要求验证身份，没有办法，只好硬着头皮P了英文版的身份证传了过去，谁知道居然还过了，也算是有惊无险吧。</p><h3 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h3><p>这个域名该用做什么呢，目前没想好（绝不是因为至今依旧是菜鸡），所以，极大概率吃灰域名+1，嗯，就这样随便挂个单页先放着吧。等下，目前唯一的用途是拿来建了一个邮箱，但是，好像目前依旧用不到来着，emmmmm……</p><h3 id="最后的最后"><a href="#最后的最后" class="headerlink" title="最后的最后"></a>最后的最后</h3><p>可怜钱包里的银子又不知所踪了，我怎么就管不住这手呢（doge），嗯，今年份的文章应该也许大概可能是水完了吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;过程&quot;&gt;&lt;a href=&quot;#过程&quot; class=&quot;headerlink&quot; title=&quot;过程&quot;&gt;&lt;/a&gt;过程&lt;/h3&gt;&lt;p&gt;又双叒叕注册了一个域名，这次这个是我的姓名拼音，是&lt;strong&gt;名字.姓&lt;/strong&gt;这样的，比较坑的是，因为是欧洲那边的国别域名，刚
      
    
    </summary>
    
    
      <category term="domain name" scheme="https://weair.cc/tags/domain-name/"/>
    
  </entry>
  
  <entry>
    <title>GitLab配置GitLab Pages</title>
    <link href="https://weair.cc/gitlab-pages/"/>
    <id>https://weair.cc/gitlab-pages/</id>
    <published>2021-10-14T04:00:00.000Z</published>
    <updated>2024-10-14T02:33:57.649Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><p>准备好单独的域名并设置泛域名解析，以及安装<strong>zip</strong>及<strong>unzip</strong>，配置HTTPS需提供域名的通配符证书。</p><h3 id="安装GitLab-Pages"><a href="#安装GitLab-Pages" class="headerlink" title="安装GitLab Pages"></a>安装GitLab Pages</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git</span><br><span class="line">sudo -u git -H git <span class="built_in">clone</span> https://gitlab.com/gitlab-org/gitlab-pages.git</span><br><span class="line"><span class="built_in">cd</span> gitlab-pages</span><br><span class="line">sudo -u git -H git checkout v$(&lt;/home/git/gitlab/GITLAB_PAGES_VERSION)</span><br><span class="line">sudo -u git -H make</span><br></pre></td></tr></table></figure><h3 id="启用GitLab-Pages"><a href="#启用GitLab-Pages" class="headerlink" title="启用GitLab Pages"></a>启用GitLab Pages</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"gitlab_pages_enabled=true"</span> &gt;&gt; /etc/default/gitlab</span><br></pre></td></tr></table></figure><h3 id="生成API密钥"><a href="#生成API密钥" class="headerlink" title="生成API密钥"></a>生成API密钥</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H openssl rand -base64 32 &gt; /home/git/gitlab/gitlab-pages-secret</span><br></pre></td></tr></table></figure><h3 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><p>进入<strong>/home/git/gitlab/conf</strong>目录并编辑<strong>gitlab.yml</strong>文件。</p><p>HTTP配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">## GitLab Pages</span><br><span class="line">pages:</span><br><span class="line">  enabled: true</span><br><span class="line">  access_control: false</span><br><span class="line">  # The location where pages are stored (default: shared/pages).</span><br><span class="line">  # path: shared/pages</span><br><span class="line"></span><br><span class="line">  host: pages.domain.name</span><br><span class="line">  port: 80 # Set to 443 if you serve the pages with HTTPS</span><br><span class="line">  https: false # Set to true if you serve the pages with HTTPS</span><br><span class="line">  artifacts_server: false # Set to false if you want to disable online view of HTML artifacts</span><br><span class="line">  external_http: [&quot;127.0.0.1:8090&quot;]</span><br><span class="line">  secret_file: /home/git/gitlab/gitlab-pages-secret</span><br></pre></td></tr></table></figure><p>HTTPS配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">## GitLab Pages</span><br><span class="line">pages:</span><br><span class="line">  enabled: true</span><br><span class="line">  access_control: false</span><br><span class="line">  # The location where pages are stored (default: shared/pages).</span><br><span class="line">  # path: shared/pages</span><br><span class="line"></span><br><span class="line">  host: pages.domain.name</span><br><span class="line">  port: 443 # Set to 443 if you serve the pages with HTTPS</span><br><span class="line">  https: true # Set to true if you serve the pages with HTTPS</span><br><span class="line">  artifacts_server: true # Set to false if you want to disable online view of HTML artifacts</span><br><span class="line">  secret_file: /home/git/gitlab/gitlab-pages-secret</span><br></pre></td></tr></table></figure><p>进入<strong>/home/git/gitlab/gitlab-pages</strong>目录并编辑<strong>gitlab-pages.conf</strong>文件。</p><p>HTTP配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">listen-http=:8090</span><br><span class="line">pages-root=/home/git/gitlab/shared/pages</span><br><span class="line">api-secret-key=/home/git/gitlab/gitlab-pages-secret</span><br><span class="line">pages-domain=pages.domain.name</span><br><span class="line">internal-gitlab-server=https://gitlab.domain.name</span><br></pre></td></tr></table></figure><p>HTTPS配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">listen-proxy=:8090</span><br><span class="line">pages-root=/home/git/gitlab/shared/pages</span><br><span class="line">api-secret-key=/home/git/gitlab/gitlab-pages-secret</span><br><span class="line">pages-domain=pages.domain.name</span><br><span class="line">internal-gitlab-server=https://gitlab.domain.name</span><br></pre></td></tr></table></figure><h3 id="配置NGINX"><a href="#配置NGINX" class="headerlink" title="配置NGINX"></a>配置NGINX</h3><p>复制<strong>/home/git/gitlab/lib/support/nginx</strong>目录下的相应的配置文件到NGINX的配置文件目录中并编辑，重启NGINX。</p><h3 id="重启GitLab"><a href="#重启GitLab" class="headerlink" title="重启GitLab"></a>重启GitLab</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service gitlab restart</span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">/etc/init.d/gitlab restart</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前期准备&quot;&gt;&lt;a href=&quot;#前期准备&quot; class=&quot;headerlink&quot; title=&quot;前期准备&quot;&gt;&lt;/a&gt;前期准备&lt;/h3&gt;&lt;p&gt;准备好单独的域名并设置泛域名解析，以及安装&lt;strong&gt;zip&lt;/strong&gt;及&lt;strong&gt;unzip&lt;/stron
      
    
    </summary>
    
    
      <category term="GitLab Pages" scheme="https://weair.cc/tags/GitLab-Pages/"/>
    
  </entry>
  
  <entry>
    <title>GitHub Actions克隆、推送到私有仓库</title>
    <link href="https://weair.cc/github-actions/"/>
    <id>https://weair.cc/github-actions/</id>
    <published>2021-10-13T04:00:00.000Z</published>
    <updated>2021-10-25T07:44:31.029Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://docs.github.com/cn/actions" title="GitHub Actions" target="_blank" rel="noopener">GitHub Actions</a>可以很方便实现CI/CD工作流，类似Travis的用法，来帮我们完成一些工作，比如实现自动化测试、打包、部署等操作。</p><h3 id="配置密钥"><a href="#配置密钥" class="headerlink" title="配置密钥"></a>配置密钥</h3><p>首先生成密钥。</p><p>在当前仓库<strong>Settings-&gt;Secrets-&gt;New repository secret</strong>添加私钥。</p><p>1、在<strong>Name</strong>填写GITHUB_ACTIONS_KEY。</p><p>2、在<strong>Value</strong>填写生成的私钥。</p><p>在被克隆、推送的私有仓库<strong>Settings-&gt;Deploy keys-&gt;Add deploy key</strong>添加公钥。</p><p>1、在<strong>Title</strong>填写GITHUB_ACTIONS_PUB。</p><p>2、在<strong>Key</strong>填写生成的公钥。</p><h3 id="编写-Github-Actions"><a href="#编写-Github-Actions" class="headerlink" title="编写 Github Actions"></a>编写 Github Actions</h3><p>在当前仓库根目录下创建<strong>.github/workflows/actions.yml</strong>,编辑<strong>actions.yml</strong>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">name: Github Actions</span><br><span class="line"></span><br><span class="line">on:</span><br><span class="line">  push:</span><br><span class="line">    branches:</span><br><span class="line">      - main</span><br><span class="line"></span><br><span class="line">jobs:</span><br><span class="line">  build:</span><br><span class="line"></span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line"></span><br><span class="line">    steps:</span><br><span class="line">      ...</span><br><span class="line"></span><br><span class="line">    - name: Set env</span><br><span class="line">      env:</span><br><span class="line">        ACTIONS_KEY: $&#123;&#123; secrets.GITHUB_ACTIONS_KEY &#125;&#125;</span><br><span class="line">      run: |</span><br><span class="line">        mkdir -p ~/.ssh/</span><br><span class="line">        echo &quot;$ACTIONS_KEY&quot; &gt; ~/.ssh/id_rsa</span><br><span class="line">        chmod 700 ~/.ssh</span><br><span class="line">        chmod 600 ~/.ssh/id_rsa</span><br><span class="line">        ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span><br><span class="line">        git config --global user.name &quot;username&quot;</span><br><span class="line">        git config --global user.email &quot;user@email.com&quot;</span><br><span class="line"></span><br><span class="line">    - name: Git clone</span><br><span class="line">      run: |</span><br><span class="line">        git clone git@github.com:username/repository.git</span><br><span class="line"></span><br><span class="line">    - name: Git push</span><br><span class="line">      run: |</span><br><span class="line">        cd repository</span><br><span class="line">        git add -A</span><br><span class="line">        git commit -m &quot;commit&quot;</span><br><span class="line">        git push -u origin main</span><br></pre></td></tr></table></figure><p>然后将本仓库推送到GitHub上即可自动执行。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://docs.github.com/cn/actions&quot; title=&quot;GitHub Actions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub Actions&lt;/a&gt;可以很方便实现CI/CD工作流，类似Tr
      
    
    </summary>
    
    
      <category term="GitHub Actions" scheme="https://weair.cc/tags/GitHub-Actions/"/>
    
  </entry>
  
  <entry>
    <title>Fail2ban不生效</title>
    <link href="https://weair.cc/fix-fail2ban-doesn&#39;t-work/"/>
    <id>https://weair.cc/fix-fail2ban-doesn&#39;t-work/</id>
    <published>2021-09-24T04:00:00.000Z</published>
    <updated>2024-10-22T01:01:58.154Z</updated>
    
    <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>因为搭建了一个Gitea服务，所以开放了22端口，但是经常遭到暴力破解扫描，所以安装了Fail2ban禁掉暴力破解的IP地址。</p><p>但是使用一段时间后发现Fail2ban并没有生效禁掉暴力破解的IP地址。</p><p>开始以为是配置文件错误，修改配置文件之后依旧没有生效。</p><p>配置文件如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">[DEFAULT]</span><br><span class="line">ignoreip = 127.0.0.1/8</span><br><span class="line">bantime  = 259200</span><br><span class="line">findtime  = 3600</span><br><span class="line">maxretry = 3</span><br><span class="line">...</span><br><span class="line">[sshd]</span><br><span class="line">enabled = true</span><br><span class="line">port    = ssh</span><br><span class="line">filter  = sshd</span><br><span class="line">logpath = %(sshd_log)s</span><br><span class="line">backend = %(sshd_backend)s</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>后来发现，更改了时区后，但是日志的时间并没有修改过来，两者的时间不一致，导致了Fail2ban不生效。</p><p>解决办法，重启日志服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart rsyslog.service</span><br></pre></td></tr></table></figure><p>重启完日志服务之后Fail2ban就可以正常工作了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h3&gt;&lt;p&gt;因为搭建了一个Gitea服务，所以开放了22端口，但是经常遭到暴力破解扫描，所以安装了Fail2ban禁掉暴力破解的IP地址。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="Fail2ban" scheme="https://weair.cc/tags/Fail2ban/"/>
    
  </entry>
  
  <entry>
    <title>一个下载Pixiv指定画师的Shell脚本</title>
    <link href="https://weair.cc/pixiv-shell-script/"/>
    <id>https://weair.cc/pixiv-shell-script/</id>
    <published>2021-09-03T04:00:00.000Z</published>
    <updated>2024-09-30T09:09:09.426Z</updated>
    
    <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>P站上看到有画师画得作品不错，想全部保存下来但是嫌一个一个的下载太慢，于是摸鱼造了这个轮子。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>因为API提供的数据是json格式的，所以需要先提前安装好用来处理json的命令行工具<strong>jq</strong>，以及需要安装下载工具<strong>aria2</strong>，另外还需要查看要下载的画师的P站ID。</p><h3 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"请输入Pixiv作者ID："</span> member_id</span><br><span class="line"><span class="keyword">if</span> [[ `curl -sSL -k https://api.obfs.dev/api/pixiv/\?<span class="built_in">type</span>\=member_illust\&amp;id\=<span class="variable">$&#123;member_id&#125;</span> | jq -r .code` = <span class="string">'422'</span> ]]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">"该ID不存在。\n"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">elif</span> [[ `curl -sSL -k https://api.obfs.dev/api/pixiv/\?<span class="built_in">type</span>\=member_illust\&amp;id\=<span class="variable">$&#123;member_id&#125;</span> | jq -r .illusts` = <span class="string">'[]'</span> ]]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">"该ID不存在。\n"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    mkdir ./<span class="variable">$&#123;member_id&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"下载中，请稍候……\n"</span></span><br><span class="line">illust_page=1</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [[ `curl -sSL -k https://api.obfs.dev/api/pixiv/\?<span class="built_in">type</span>\=member_illust\&amp;id\=<span class="variable">$&#123;member_id&#125;</span>\&amp;page\=<span class="variable">$&#123;illust_page&#125;</span> | jq -r .illusts` = <span class="string">'[]'</span> ]]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        curl -sSL -k https://api.obfs.dev/api/pixiv/\?<span class="built_in">type</span>\=member_illust\&amp;id\=<span class="variable">$&#123;member_id&#125;</span>\&amp;page\=<span class="variable">$&#123;illust_page&#125;</span> | jq . | grep -E <span class="string">"\"original_image_url\":|\"original\":"</span> | sed -e <span class="string">"s/\"original_image_url\"://g;s/\"original\"://g;s/\"//g;s/[[:space:]]//g;s/i.pximg.net/i.pixiv.cat/g"</span> &gt;&gt; ./download.txt</span><br><span class="line">        <span class="built_in">let</span> illust_page++</span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">cat ./download.txt | sort | uniq | tee ./download.txt &amp;&gt; /dev/null</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        aria2c -c  -d ./<span class="variable">$&#123;member_id&#125;</span>  -x 15 -s 5 <span class="variable">$&#123;line&#125;</span></span><br><span class="line">        <span class="keyword">if</span> [ -f ./<span class="variable">$&#123;member_id&#125;</span>/`<span class="built_in">echo</span> <span class="variable">$&#123;line&#125;</span> | rev | cut -d <span class="string">"/"</span> -f 1 | rev` ]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">continue</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span> &lt; ./download.txt</span><br><span class="line">rm ./download.txt</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"下载完成，共下载了`ls ./<span class="variable">$&#123;member_id&#125;</span> | wc -l`张图片。"</span></span><br></pre></td></tr></table></figure><p>或点击<a href="/script/pixiv_illust_download.sh">这里</a>下载。</p><h3 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h3><p>最后感谢用到的API程序<a href="https://github.com/mixmoe/HibiAPI" title="HibiAPI" target="_blank" rel="noopener">HibiAPI</a>，以及P站图片反向代理<a href="https://pixiv.cat/" title="pixiv.cat" target="_blank" rel="noopener">pixiv.cat</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h3&gt;&lt;p&gt;P站上看到有画师画得作品不错，想全部保存下来但是嫌一个一个的下载太慢，于是摸鱼造了这个轮子。&lt;/p&gt;
&lt;h3 id=&quot;准备工作&quot;&gt;&lt;a hr
      
    
    </summary>
    
    
      <category term="Shell脚本" scheme="https://weair.cc/tags/Shell%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>编译安装Sshwifty</title>
    <link href="https://weair.cc/install-sshwifty/"/>
    <id>https://weair.cc/install-sshwifty/</id>
    <published>2021-07-10T04:00:00.000Z</published>
    <updated>2024-10-14T02:06:16.447Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/nirui/sshwifty" title="Sshwifty" target="_blank" rel="noopener">Sshwifty</a>是一个网页版的SSH &amp; Telnet客户端，可以简单的部署在你的电脑或是服务器上。</p><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y autoconf automake build-essential ca-certificates curl git libtool libvips-dev</span><br></pre></td></tr></table></figure><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://nodejs.org/dist/v22.0.0/node-v22.0.0-linux-x64.tar.gz</span><br><span class="line">tar -zxvf node-v22.0.0-linux-x64.tar.gz -C /usr/<span class="built_in">local</span>/</span><br><span class="line">chown -R root.root /usr/<span class="built_in">local</span>/node-v22.0.0-linux-x64/</span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/node-v22.0.0-linux-x64/bin/node /usr/<span class="built_in">local</span>/bin/</span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/node-v22.0.0-linux-x64/bin/npm /usr/<span class="built_in">local</span>/bin/</span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/node-v22.0.0-linux-x64/bin/npx /usr/<span class="built_in">local</span>/bin/</span><br></pre></td></tr></table></figure><h3 id="安装Go"><a href="#安装Go" class="headerlink" title="安装Go"></a>安装Go</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://go.dev/dl/go1.22.3.linux-amd64.tar.gz</span><br><span class="line">tar -zxvf go1.22.3.linux-amd64.tar.gz -C /usr/<span class="built_in">local</span>/</span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/go/bin/go /usr/<span class="built_in">local</span>/bin/</span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/go/bin/gofmt /usr/<span class="built_in">local</span>/bin/</span><br></pre></td></tr></table></figure><h3 id="编译安装Sshwifty"><a href="#编译安装Sshwifty" class="headerlink" title="编译安装Sshwifty"></a>编译安装Sshwifty</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/nirui/sshwifty.git</span><br><span class="line"><span class="built_in">cd</span> sshwifty</span><br><span class="line">npm install</span><br><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>编译完成后会在当前路径生成二进制文件<strong>sshwifty</strong>。</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>其它问题可查询<a href="https://github.com/nirui/sshwifty/blob/master/README.md" title="官方文档" target="_blank" rel="noopener">官方文档</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://github.com/nirui/sshwifty&quot; title=&quot;Sshwifty&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Sshwifty&lt;/a&gt;是一个网页版的SSH &amp;amp; Telnet客户端，可以简单的部
      
    
    </summary>
    
    
      <category term="Sshwifty" scheme="https://weair.cc/tags/Sshwifty/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu添加PyCharm快捷启动方式</title>
    <link href="https://weair.cc/pycharm-quick-lanuch/"/>
    <id>https://weair.cc/pycharm-quick-lanuch/</id>
    <published>2021-03-13T04:00:00.000Z</published>
    <updated>2024-10-14T02:06:36.975Z</updated>
    
    <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>Ubuntu安装好PyCharm后没有快捷方式，使用起来过于麻烦，所以添加一个快捷启动方式，方便使用。</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/share/applications/PyCharm.desktop</span><br></pre></td></tr></table></figure><p>添加如下内容并保存：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Encoding=UTF-8</span><br><span class="line">Type=Application</span><br><span class="line">Name=PyCharm</span><br><span class="line">GenericName=PyCharm</span><br><span class="line">Comment=The Python IDE for Professional Developers</span><br><span class="line">Exec=sh /path/PyCharm/bin/pycharm.sh</span><br><span class="line">Icon=/path/PyCharm/bin/pycharm.png</span><br><span class="line">Terminal=false</span><br><span class="line">Categories=Application;</span><br></pre></td></tr></table></figure><p>修改<strong>Exec</strong>及<strong>Icon</strong>路径为PyCharm的启动路径及图标即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h3&gt;&lt;p&gt;Ubuntu安装好PyCharm后没有快捷方式，使用起来过于麻烦，所以添加一个快捷启动方式，方便使用。&lt;/p&gt;
&lt;h3 id=&quot;步骤&quot;&gt;&lt;a
      
    
    </summary>
    
    
      <category term="PyCharm" scheme="https://weair.cc/tags/PyCharm/"/>
    
  </entry>
  
  <entry>
    <title>安装HedgeDoc</title>
    <link href="https://weair.cc/install-hedgedoc/"/>
    <id>https://weair.cc/install-hedgedoc/</id>
    <published>2021-02-17T04:00:00.000Z</published>
    <updated>2021-10-27T09:11:23.645Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://hedgedoc.org/" title="HedgeDoc" target="_blank" rel="noopener">Hedgedoc</a>是Hedgedoc团队的一个基于Javascript的Markdown文档实时编辑分享平台，其前身为CodiMD。</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>提前安装Nginx、Docker、Docker Compose，Docker以及Docker Compose的安装可以查阅<a href="https://weair.cc/install-vaultwarden/" title="安装">这里</a>。如果开启防火墙，请放行3000端口或关闭防火墙。</p><h3 id="部署HedgeDoc"><a href="#部署HedgeDoc" class="headerlink" title="部署HedgeDoc"></a>部署HedgeDoc</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/hedgedoc/container.git hedgedoc-container</span><br><span class="line"><span class="built_in">cd</span> hedgedoc-container</span><br><span class="line">docker-compose up</span><br></pre></td></tr></table></figure><p>然后打开<strong>ip:3000</strong>访问。</p><h3 id="配置HedgeDoc"><a href="#配置HedgeDoc" class="headerlink" title="配置HedgeDoc"></a>配置HedgeDoc</h3><p>为HedgeDoc配置域名，否则上传图片会报错。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>添加如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">- CMD_DB_URL=postgres://hedgedoc:password@database:5432/hedgedoc</span><br><span class="line">- CMD_DOMAIN=domain.name</span><br><span class="line">- CMD_PROTOCOL_USESSL=true</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>然后重新启动服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>更多配置可查询<a href="https://docs.hedgedoc.org/configuration/" title="配置" target="_blank" rel="noopener">这里</a>。</p><h3 id="Nginx反代"><a href="#Nginx反代" class="headerlink" title="Nginx反代"></a>Nginx反代</h3><p>反向代理配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">map $http_upgrade $connection_upgrade &#123;</span><br><span class="line">        default upgrade;</span><br><span class="line">        &apos;&apos;      close;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">        server_name domain.name;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                proxy_pass http://127.0.0.1:3000;</span><br><span class="line">                proxy_set_header Host $host; </span><br><span class="line">                proxy_set_header X-Real-IP $remote_addr; </span><br><span class="line">                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; </span><br><span class="line">                proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /socket.io/ &#123;</span><br><span class="line">                proxy_pass http://127.0.0.1:3000;</span><br><span class="line">                proxy_set_header Host $host; </span><br><span class="line">                proxy_set_header X-Real-IP $remote_addr; </span><br><span class="line">                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; </span><br><span class="line">                proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">                proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">                proxy_set_header Connection $connection_upgrade;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    listen [::]:443 ssl http2;</span><br><span class="line">    listen 443 ssl http2;</span><br><span class="line">    ssl_certificate fullchain.pem;</span><br><span class="line">    ssl_certificate_key privkey.pem;</span><br><span class="line">    include options-ssl-nginx.conf;</span><br><span class="line">    ssl_dhparam ssl-dhparams.pem;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启Nginx，然后就能通过域名访问了。</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>其它问题可查询<a href="https://docs.hedgedoc.org/" title="官方文档" target="_blank" rel="noopener">官方文档</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://hedgedoc.org/&quot; title=&quot;HedgeDoc&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hedgedoc&lt;/a&gt;是Hedgedoc团队的一个基于Javascript的Markdown文档实时编辑分享平台
      
    
    </summary>
    
    
      <category term="HedgeDoc" scheme="https://weair.cc/tags/HedgeDoc/"/>
    
  </entry>
  
</feed>
